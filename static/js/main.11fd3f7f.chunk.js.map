{"version":3,"sources":["_locale/index.js","Utilities/agent.js","Utilities/text.js","Utilities/index.js","HOCS/AnimateLoad.js","Pages/Home/index.js","Components/Card/modal.js","Helpers/Tracker.js","Components/Canvas/VideoCapture.js","Pages/DataCapture/index.js","Components/Navbar/index.js","App.js","serviceWorker.js","index.js"],"names":["AgentUtils","getAgentLocale","localStorage","getItem","navigator","language","userLanguage","slice","TextUtils","hashCode","str","i","hash","length","charCodeAt","Math","abs","getLocalCaption","key","user_lang","Locale","title","LoadExternelScript","url","Promise","resolve","reject","script","document","createElement","type","async","src","onload","onerror","onreadystatechange","readyState","head","appendChild","AnimateLoad","WrappedComponent","state","didMount","setTimeout","setState","this","className","props","React","Component","Home","Utils","Modal","show_modal","toggleModal","bind","display","buttonClass","onClick","caption","tabIndex","role","style","getstyle","icon","faTimesCircle","children","Tracker","canvas","x","y","w","h","object","object_index","history","fxy","freq","update","getHistory","index","arr","l","date","Date","getTime","xy","width","height","floor","random","hist_obj","Array","isArray","cycleIndex","ctx","getContext","strokeStyle","fillStyle","font","fillText","fillRect","ZigZag","step","a","c","grad_inc","run","Wavey","p","sin","PI","VideoCapture","frame_rate","flip","tracker","name","recording","sessions","stream_src","stream_stage","setStream_src","element","setStream_stage","paintCanvas","selectRunner","startStream","e","runners","target","id","runner","video","mediaDevices","getUserMedia","then","stream","srcObject","catch","errr","console","log","frames","tested","setInterval","clearRect","drawImage","point","frame","getImageData","push","cls","faRecordVinyl","getPlayButton","ref","onPlay","autoPlay","DataCollection","subject","experiments","settingsCollapsed","toggleSettingsBar","getSettingsPane","NavBar","location","useLocation","addEventListener","classList","contains","dropdowns","getElementsByClassName","remove","onToggleDropDownClick","getAttribute","add","link_class","active","dropdown_class","get_border_color","navs","map","parseLink","chn","pathname","link","arguments","to","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","html","App","basename","sessionStorage","PrivateNavs","PublicNavs","exact","path","component","strict","render","DataCapture","Boolean","window","hostname","match","ReactDOM","StrictMode","getElementById","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.11fd3f7f.chunk.js","sourcesContent":["import en from \"./en\";\nimport ru from \"./ru\";\n\nexport default {\n    \"en\" : en,\n    \"ru\" : ru\n}","const getAgentLocale = () => {\n    let lang = localStorage.getItem(\"_locale\") || navigator.language || navigator.userLanguage || \"ru\";\n    return lang.slice(0,2);\n}\n\n\nconst AgentUtils = {\n    getAgentLocale\n}\n\nexport default AgentUtils;","import Locale from \"../_locale\"\nimport AgentUtils from \"./agent\"\n\nconst hashCode = function(str) {\n    var hash = 0, i, chr;\n    if (str.length === 0) return hash;\n    for (i = 0; i < str.length; i++) {\n      chr   = str.charCodeAt(i);\n      hash  = ((hash << 5) - hash) + chr;\n      hash |= 0; // Convert to 32bit integer\n    }\n    return Math.abs(hash);\n};\n\nfunction getLocalCaption(key){\n    const user_lang = AgentUtils.getAgentLocale();\n    if (Locale[user_lang][key]){\n        return Locale[user_lang][key].title\n    }\n\n    if (Locale[\"en\"][key]){\n        return Locale[\"en\"][key].title\n    }\n\n    return \"\";\n}\n\nconst TextUtilities = {\n    hashCode,\n    getLocalCaption\n}\nexport default TextUtilities;","import TextUtils from \"./text\"\nimport AgentUtils from \"./agent\"\n\nconst LoadExternelScript = (url) =>{\n    return new Promise(function(resolve, reject) {\n      var script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.async = true;\n      script.src = url;\n      script.onload = resolve;\n      script.onerror = reject;\n      script.onreadystatechange=function(){\n          if (script.readyState === 'complete') \n            script.onload()\n        }\n\n      document.head.appendChild(script);\n    })\n}\n\nexport default {\n    TextUtils,\n    AgentUtils, \n    LoadExternelScript\n}","import React from 'react';\nconst AnimateLoad = (WrappedComponent) => {\n    return class extends React.Component {\n        state = {didMount: false}\n        componentDidMount(){\n           setTimeout(() => {\n                this.setState({didMount: true})\n            }, 0)\n        }\n        render(){\n            const {didMount} = this.state\n            return (\n                <div className={`fade-in ${didMount && 'visible'}`}>\n                   <WrappedComponent {...this.props} />\n                </div>\n            );\n        }\n    }\n}\n\nexport default AnimateLoad;","import React from 'react';\nimport Utils from \"../../Utilities/\";\nimport AnimateLoad from \"../../HOCS/AnimateLoad\";\n\n\nconst Home = AnimateLoad(class Home extends React.Component {\n        render () {\n            return (\n                <div className=\"\">            \n                    <div className=\"container-fluid mt-5\">\n                        <div className=\"row\">\n                            <div className=\"col-12 h5\">\n                                {Utils.TextUtils.getLocalCaption(\"_home_lead\")}\n                            </div>\n                            <div className=\"col-12\">\n                                {Utils.TextUtils.getLocalCaption(\"_description\")}\n                            </div>\n                        </div>\n                    </div>\n                </div>      \n            ); \n        }\n    }\n)\n  \n  export default Home;","import React from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {faTimesCircle} from '@fortawesome/free-solid-svg-icons';\n\nclass Modal extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            show_modal : false,\n        }\n        this.toggleModal = this.toggleModal.bind(this);\n    }\n    toggleModal(){\n        this.setState({show_modal: !this.state.show_modal});\n    }\n    getstyle(){\n        if (this.state.show_modal)\n            return {display:\"block\"}\n    }\n    render(){\n        return <>\n            <button \n                type=\"button\" \n                className={this.props.buttonClass || \"btn btn-primary\"} \n                onClick={this.toggleModal}>\n                    {this.props.caption || \"...\"}\n            </button>\n\n            <div className={\"modal fade \" + (this.state.show_modal ? \" show\" : \"\")} tabIndex=\"-1\" role=\"dialog\"   style={this.getstyle()}>\n                <div className=\"modal-dialog modal-lg\">\n                    <div className=\"modal-content p-1\">\n                        <div className=\"col-12 text-right\">\n                            <button \n                                type=\"button\" \n                                className=\"btn btn-transparent\"\n                                onClick={this.toggleModal}>\n                                    <FontAwesomeIcon icon={faTimesCircle} className=\"text-danger\"/>\n                            </button>\n                        </div>\n                        <div className=\"p-3\">\n                            {this.props.children}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    }\n}\n\nexport default Modal;","class Tracker {\n    constructor(props){\n        this.state = {\n            canvas: props.canvas,\n            x : props.x || 0,\n            y : props.y || 0,\n            w : props.w || 10,\n            h : props.h || 10,\n            object : props.object,\n            object_index : 0,\n            history: [], \n            fxy :  props.fxy,\n            freq : props.freq || 1000 * 5, // update position every second\n        }\n        this.update = this.update;\n        this.getHistory = () => this.state.history;\n    }\n    cycleIndex(index, arr){\n        const l = arr.length;\n        if (index > l - 2){\n            return 0;\n        }\n        return index + 1;\n    }\n    update(){\n        const l = this.state.history.length;\n        const date = new Date().getTime();\n        if(l){            \n            const last_entry = this.state.history[l - 1];\n            if (date - last_entry.date > this.state.freq){\n                let xy;\n                if (this.state.fxy){\n                    xy = this.state.fxy(this.state.x, this.state.y, this.state.canvas.width, this.state.canvas.height)\n                }else{\n                    const x = Math.floor(Math.random() * 1000)%this.state.canvas.width\n                    const y = Math.floor(Math.random() * 1000)%this.state.canvas.height;\n                    xy = {x, y };\n                }\n                const history = this.state.history;\n                const hist_obj = {\n                    ...xy,\n                    date\n                }\n                // history.push(hist_obj);\n                history[0] = hist_obj;\n                this.state.x  = xy.x;\n                this.state.y = xy.y;\n                this.state.history = history;\n\n                if (Array.isArray(this.state.object)){\n                    let index = this.state.object_index;\n                    this.state.object_index = this.cycleIndex(index, this.state.object);\n                }\n            }\n        }else{\n            this.state.x  = 0;\n            this.state.y = 0;\n            this.state.history = [\n                {\n                    x : 0,\n                    y : 0,\n                    date\n                }\n            ];\n        }\n\n        const ctx = this.state.canvas.getContext(\"2d\");\n        ctx.strokeStyle = 'rgb(255, 0, 0)';\n        ctx.fillStyle = 'rgb(255, 0, 0)';\n\n        if (Array.isArray(this.state.object)){\n            ctx.font = '18px serif';\n            ctx.fillText(this.state.object[this.state.object_index], this.state.x, this.state.y);\n            \n        }else{\n            ctx.fillRect(this.state.x, this.state.y, this.state.w, this.state.h);\n        }\n        return {\n            x : this.state.x,\n            y : this.state.y\n        }\n    }\n}\n\nclass ZigZag {\n    /** given x, y, returns new x,y in the range 0,w and 0,h respectively, x step increments, y = ax + c */\n    constructor(step=10 ,a = .5, c = 3, grad_inc = .1) {\n        this.run = (x, y, w, h) => {\n            if ( x + step <= 0 || x + step >= w){ // flip step\n                step *= -1;\n                a += grad_inc\n            }\n            if(a >= 1){\n                grad_inc *= -1;\n                a += grad_inc;\n            }\n            y = Math.abs(a*x + c);\n            const diff = y - h;\n            if (diff > 0){\n                a *= -1;\n            }\n            y = Math.abs(a*x + c);\n            x += step;\n            \n            return {\n                x,\n                y\n            }\n        }\n    }    \n}\nclass Wavey {\n    /** given x, y, returns new x,y in the range 0,w and 0,h respectively, x step increments, y = asin(x + c), */\n    constructor(step=10, p =.1) {\n        this.run = (x, y, w, h) => {\n            if ( x + step <= 0 || x + step >= w){ // flip step\n                step *= -1;\n                p += .1\n                if(p > 1){\n                    p = .1;\n                }\n            }\n            y = h * Math.sin((p * x/w) * Math.PI) ;\n            x += step;\n            \n            return {\n                x,\n                y\n            }\n        }\n    }    \n}\n\nexport {\n    Tracker,\n    ZigZag, \n    Wavey\n};","import React from 'react';\nimport Utils from \"../../Utilities\";\nimport {Tracker, ZigZag, Wavey} from \"../../Helpers/Tracker\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay, faPause, faRecordVinyl} from '@fortawesome/free-solid-svg-icons';\n\n\nclass VideoCapture extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            width: props.width || 800,\n            height: props.height || 600,\n            frame_rate : 30,\n            flip :  true,\n            tracker: {\n                // object: [\"text 1\", \"text 2\"],\n                freq : 1000 * .1,\n                name : null\n            },\n            recording: 0, // -1 record, 1 preview\n            sessions: []\n        }\n        this.stream_src = null;\n        this.stream_stage = null;\n\n        this.setStream_src = element => {\n            this.stream_src = element;\n        };\n\n        this.setStream_stage = element => {\n            this.stream_stage = element;\n        };\n\n        this.paintCanvas = this.paintCanvas.bind(this);\n        this.selectRunner = this.selectRunner.bind(this);\n    }\n    componentDidMount(){\n        this.startStream();\n    }\n    selectRunner(e) {\n        const runners = {\n            ZigZag : new ZigZag(10, .5),\n            Wavey : new Wavey(10)\n        }\n\n        let recording = 1;\n        if (e.target.id === this.state.tracker.name){ // collect the recordings, second click, third click stop\n            if (this.state.recording === -1){\n                recording = 0;\n            }\n            if (this.state.recording === 1){\n                recording = -1;\n            }\n        }\n        const runner = runners[e.target.id] ? runners[e.target.id].run : null;\n        let tracker = this.state.tracker\n        tracker = {\n            ...tracker,\n            canvas: this.stream_stage,\n            fxy : runner,\n            name: e.target.id,\n        };\n\n        tracker[\"tracker\"] = new Tracker(tracker);\n\n        this.setState({\n                tracker,\n                recording,\n            });\n    }\n    startStream(){\n        const video = this.stream_src;           \n        if (navigator.mediaDevices.getUserMedia) {\n            // let supportedConstraints = navigator.mediaDevices.getSupportedConstraints();    \n            // console.log(supportedConstraints);\n            //setInterval(this.randomUpdateTrackerXY, this.state.tracker.freq);\n            navigator.mediaDevices.getUserMedia({ video: true })\n            .then(function (stream) {\n                video.srcObject = stream;\n            })\n            .catch(function (errr) {\n                console.log(\"Something went wrong!\");\n            });\n        }    \n    }\n    paintCanvas(){\n        let frames = [];\n        let tested = false;\n\n        setInterval(() => {\n            const canvas = this.stream_stage;\n            const ctx = canvas.getContext(\"2d\");\n        \n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n            ctx.drawImage(this.stream_src, 0, 0, canvas.width, canvas.height);\n\n\n            if(this.state.recording){\n                const point = this.state.tracker.tracker.update();\n\n                if(this.state.recording === -1){ // collecting frames\n                    const frame = ctx.getImageData(0, 0, canvas.width, canvas.height);\n                    // use darknet to box the eyes only\n\n                    if (!tested){\n                        frames.push({point, frame});\n                    }\n\n                    if(frames.length > this.state.frame_rate * 5){ \n                        console.log(frames);\n                        //  send frames to server every 5 seconds;\n                        frames = []; //reset\n                        tested = true;\n                    }\n                }\n            }\n            \n        }, 1000 / this.state.frame_rate)\n        \n    }\n    getCanvasSettings(){\n        return this.state\n    }\n    getPlayButton(id){\n        let cls = \"btn btn-transparent border-primary\";\n        let caption = id;\n        if(this.state.tracker.name === id){\n            cls = \"btn btn-warning border-primary\";\n            caption = <>\n                {id} \n            </>\n            if (this.state.recording === -1){\n                cls = \"btn btn-success border-primary\";\n                caption = <>\n                {id} <FontAwesomeIcon icon={faRecordVinyl} className=\"text-primary\"/>\n            </> \n            }\n        }\n        return <button className={cls} id={id} onClick={this.selectRunner}>\n                    {caption}\n                </button>;\n    }\n    render () {\n        return (\n            <div className=\"row\">\n                <div className=\"col-12 border-right border-primary border-2x py-0\">\n                    <div className=\"col-12 px-0\">\n                        <h5 className=\"\">\n                            {Utils.TextUtils.getLocalCaption(\"_click_tracker\")}\n                        </h5>\n                        <div className=\"btn-group my-3\">\n                            {this.getPlayButton(\"ZigZag\")}\n                            {this.getPlayButton(\"Wavey\")}\n                            {this.getPlayButton(\"Random\")}\n                        </div>\n                    </div>\n                    <canvas\n                        width={this.state.width} \n                        height={this.state.height} \n                        ref={this.setStream_stage}\n                        className=\"\">\n                    </canvas>\n                    \n                    <video \n                        ref={this.setStream_src}\n                        className=\"invisible\"\n                        height=\"1\"\n                        onPlay={this.paintCanvas}\n                        autoPlay>\n                    </video>\n                </div>\n            </div>\n        ); \n    }\n}\nexport default VideoCapture;","import React from 'react';\nimport Utils from \"../../Utilities\";\nimport AnimateLoad from \"../../HOCS/AnimateLoad\";\nimport Modal from \"../../Components/Card/modal\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {faArrowRight, faArrowLeft} from '@fortawesome/free-solid-svg-icons';\nimport VideoCapture from \"../../Components/Canvas/VideoCapture\";\n\nconst DataCollection = AnimateLoad(class Page extends React.Component {\n        constructor(props){\n            super(props);\n            this.state = {\n                document: {\n                    subject : {\n\n                    },\n                    experiments : [\n\n                    ]\n                },\n                settingsCollapsed: false,\n            }\n            this.toggleSettingsBar = this.toggleSettingsBar.bind(this);\n        }\n        getSettingsPane(){\n            return <>\n                \n             </>\n        }\n        toggleSettingsBar(){\n            this.setState({settingsCollapsed: !this.state.settingsCollapsed})\n        }\n        render () {\n            return (\n                <div className=\"\">            \n                    <div className=\"container-fluid mt-5\">\n                        <div className=\"row\">\n                            <div className=\"col-12 d-lg-none\">\n                                {/* settings invoked on click modal for small device */}\n                                <Modal>\n                                    <h5>\n                                        {Utils.TextUtils.getLocalCaption(\"_settings\")}\n                                    </h5>\n                                    {this.getSettingsPane()}\n                                </Modal>\n                            </div>\n                            <div className={\"col-12 \" + (this.state.settingsCollapsed? \"col-lg-11\" : \"col-lg-8\")} >\n                                <VideoCapture />\n                            </div>\n                            <div className={\"d-none d-lg-block \" + (this.state.settingsCollapsed? \"col-lg-1\" : \"col-lg-4\")}>\n                                <h5>\n                                    {/* <button className=\"btn btn-transparent text-left\" onClick={this.toggleSettingsBar}>\n                                        <FontAwesomeIcon icon={this.state.settingsCollapsed? faArrowLeft : faArrowRight} />\n                                    </button> */}\n                                    {!this.state.settingsCollapsed && Utils.TextUtils.getLocalCaption(\"_settings\")}\n                                </h5>\n                                \n                                {this.getSettingsPane()}\n                            </div>\n                        </div>\n                    </div>\n                </div>      \n            ); \n        }\n    }\n)\n  \n  export default DataCollection;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport { useLocation } from \"react-router-dom\";\nimport Utils from \"../../Utilities\"\n\nconst NavBar = (props) => {\n  let location = useLocation();\n  \n  document.addEventListener(\"click\", (e) => {\n    if(!e.target.classList.contains(\"dropdown-toggle\")){\n      let dropdowns = document.getElementsByClassName(\"dropdown-menu\");\n      for(let i = 0; i < dropdowns.length; ++i){\n        dropdowns[i].classList.remove(\"show\")\n      }\n    }\n  })\n\n  let onToggleDropDownClick = (e) => {\n    let target = e.target.id\n    let dropdowns = document.getElementsByClassName(\"dropdown-menu\");\n    for(let i = 0; i < dropdowns.length; ++i){\n      if(dropdowns[i].getAttribute(\"aria-labelledby\") === target){\n        dropdowns[i].classList.add(\"show\")\n      }else{\n        dropdowns[i].classList.remove(\"show\");\n      }\n    }\n  }\n  let get_border_color = (a) => {\n    switch (a){\n      case 2:\n        return \"border-bottom border-2x border-white\";\n      case 1:\n        return \"border-bottom border-2x border-danger\";\n      default:\n        return \"border-none\"\n    }\n  }\n\n  let link_class = (active, dropdown_class) => {\n    let border = get_border_color(active)\n\n    return \"nav-item text-white bg-transparent no-underline \" + border + \" \"+ dropdown_class;\n  }\n    \n\n  function parseLink(a){\n    let chn = \"\"\n    let active = location.pathname === a.link? 1 : 0;\n    let id = \"link_id_\" + Utils.TextUtils.hashCode(a.link)\n\n    let dropdown_class = arguments[1] ? \"dropdown-item text-left px-0\" : \"\";\n    \n    \n    if(a.children){\n      chn = a.children.map(c => parseLink(c, true))\n      for (let i = 0; i < chn.length; ++i){\n        if (chn[i].active){ // if any of my children is active then I'm active too \n          active = 2;\n        }\n      }\n\n      return {\n        \"active\" : active,\n        \"html\" : <span key={id} className=\"dropdown show\">\n                  <Link \n                    key={a.link} \n                    className={link_class(active)}\n                    onClick={onToggleDropDownClick}\n                    to={a.link} >\n                {Utils.TextUtils.getLocalCaption(a.caption)}\n              </Link>\n                &nbsp;\n                <span  \n                    className=\"dropdown-toggle text-white\"\n                    id={id}\n                    onClick={onToggleDropDownClick}\n                    data-toggle=\"dropdown\" \n                    aria-haspopup=\"true\" \n                    aria-expanded=\"false\">\n              </span>\n              <div className=\"dropdown-menu bg-primary px-3 text-left\" aria-labelledby={id}>\n                {chn.map(c => c.html)}\n              </div>\n            </span>\n      }\n    }\n\n    return {\n      \"active\" : active,\n      \"html\" : <span key={id}>\n          <Link \n            key={a.link} \n            className={link_class(active, dropdown_class)} \n            to={a.link} >\n        {Utils.TextUtils.getLocalCaption(a.caption)}\n      </Link>\n    </span>}\n  }\n\n  return (\n    <nav className={\"navbar navbar-dark bg-primary fixed-top \" + props.className} >\n      {props.navs.map((a) => {\n        let parsed = parseLink(a);\n        return parsed.html\n      })}\n    </nav>\n  );\n}\n\nexport default NavBar;","import React, { Component } from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n// import PrivateRoute from \"./Components/privateRoute\"\n\nimport Home from \"./Pages/Home\";\n\nimport DataCapture from \"./Pages/DataCapture\";\n\nimport NavBar from \"./Components/Navbar\";\n\nimport PrivateNavs from \"./Routes/private\"\nimport PublicNavs from \"./Routes/public\"\n\nimport './Css/bootstrap.css';\nimport './Css/App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter basename=\"\">\n          {(sessionStorage.getItem('user') \n            && <NavBar navs={PrivateNavs} className=\"mb-5\" /> )\n          || <NavBar navs={PublicNavs} className=\"mb-5\" />}\n          {/* <Route exact strict path=\"/login\" component={Login} /> */}\n          <Route exact path=\"/\" component={Home} />\n          {/* <PrivateRoute exact strict  path=\"/\" component={Home} /> */}\n          {/* <PrivateRoute exact strict path=\"/data_capture\" component={DataCapture} /> */}\n\n          <Route \n            exact strict path=\"/data_capture\" \n            render={(props) => <DataCapture \n              {...props}\n            />} \n          />\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}